# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --ignore=E501,W503,E266,C901 --count --exit-zero --max-complexity=10 --statistics

    - name: Unit testing
      run: |
        coverage run -m unittest discover src/test_pownet
        echo "--------------------------------------------------"  # For clarity in logs
        echo "DEBUG: Coverage text report from CI environment:"
        coverage report -m  # <<< THIS IS THE CRITICAL OUTPUT NEEDED
        echo "--------------------------------------------------"
        coverage json
        COVERAGE_PERCENT=$(python -c "import json; print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
        echo "Total Coverage: $COVERAGE_PERCENT%"
        echo "total=$COVERAGE_PERCENT" >> $GITHUB_ENV
    
    - name: Code coverage
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: 23c151ad08ede7f698ce7cfbc2c09a0a
        filename: covbadge.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.total }}

        

